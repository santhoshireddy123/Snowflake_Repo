name: Snowflake CI/CD

on:
  push:
    paths:
      - 'sql_scripts/**/*.sql'      
  pull_request:
    paths:
      - 'sql_scripts/**/*.sql'

jobs:
  execute_sql:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Fetch all history to get the list of changed files

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install snowflake-connector-python

    - name: Get changed .sql files
      id: get_changed_sql
      run: |
        echo "changed_sql_files<<EOF" >> $GITHUB_ENV
        git diff --name-only --diff-filter=d ${{ github.event.before }} ${{ github.sha }} -- sql_scripts/**/*.sql | xargs -I {} echo {} | xargs
        echo "EOF" >> $GITHUB_ENV

    - name: Execute .sql files on Snowflake
      if: ${{ env.changed_sql_files }}
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      run: |
        python -c "
        import os
        import sys
        from snowflake.connector import connect

        account = os.environ['SNOWFLAKE_ACCOUNT']
        user = os.environ['SNOWFLAKE_USER']
        password = os.environ['SNOWFLAKE_PASSWORD']
        role = os.environ['SNOWFLAKE_ROLE']
        warehouse = os.environ['SNOWFLAKE_WAREHOUSE']
        database = os.environ['SNOWFLAKE_DATABASE']
        schema = os.environ['SNOWFLAKE_SCHEMA']

        changed_sql_files = os.environ['changed_sql_files'].split()

        with connect(
            account=account,
            user=user,
            password=password,
            role=role,
            warehouse=warehouse,
            database=database,
            schema=schema,
        ) as connection:
            for sql_file in changed_sql_files:
                with open(sql_file, 'r') as f:
                    sql = f.read()
                print(f'Executing {sql_file}...')
                connection.cursor().execute(sql)
                print(f'Successfully executed {sql_file}')
        "
